name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: radio_cli
            asset_name: radio_cli-linux-amd64
          - os: macos-latest
            artifact_name: radio_cli
            asset_name: radio_cli-macos-amd64
          - os: windows-latest
            artifact_name: radio_cli.exe
            asset_name: radio_cli-windows-amd64.exe

    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsqlite3-dev libmpv-dev pkg-config

      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: |
          brew install sqlite mpv pkg-config

      - name: Install Windows dependencies
        if: matrix.os == 'windows-latest'
        run: |
          vcpkg install sqlite3:x64-windows
          vcpkg install mpv:x64-windows
          echo "VCPKGRS_DYNAMIC=1" >> $GITHUB_ENV
          echo "SQLITE3_LIB_DIR=C:\vcpkg\installed\x64-windows\lib" >> $GITHUB_ENV
          echo "LIBMPV_STATIC=0" >> $GITHUB_ENV

      - name: Build release binary
        run: cargo build --release

      - name: Prepare asset
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            mv target/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          else
            cp target/release/${{ matrix.artifact_name }} ${{ matrix.asset_name }}
          fi

      - name: Get version from tag
        id: get_version
        shell: bash
        run: echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ${{ matrix.asset_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}